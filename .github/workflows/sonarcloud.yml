name: SonarCloud
on:
  push:
    branches: [ main ]
    paths:
      - '**.cs'
      - '**.yml'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.cs'
      - '**.yml'
jobs:
  check-sonar-token:
   name: Check if container registry SONAR_TOKEN
   runs-on: ubuntu-latest
   outputs:
     have_sonar_token: ${{ steps.detect_sonar_token.outputs.have_sonar_token }}
   steps:
     - id: detect_sonar_token
       run: |
         if [[ "${{ secrets.SONAR_TOKEN }}" != "" ]]; \
         then
           echo "SONAR_TOKEN were configured in the repo"
           echo "::set-output name=have_sonar_token::true"
         else
           echo "SONAR_TOKEN were configured in the repo"
           echo "::set-output name=have_sonar_token::false"
         fi
  build:
    needs: [check-sonar-token]
    if: needs.check-sonar-token.outputs.have_sonar_token == 'true'
    name: Build
    runs-on: windows-latest
    steps:
      - name: Setup .NET Core 3
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.x
      - name: Setup .NET 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"kurnakovv_ExceptionExtensions" /o:"kurnakovmaksim" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet restore
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"